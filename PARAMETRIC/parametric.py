"""
Параметрический график.

В модуле реализована функция для построения параметрических графиков, которая принимает функции для
координат x и y, а также диапазон значений параметра t. На основе этих данных строится график.

Пример использования:
1. Окружность: x(t) = cos(t), y(t) = sin(t)
2. Лемниската Бернулли: x(t) = cos(t) / (1 + sin(t)^2), y(t) = (cos(t) * sin(t)) / (1 + sin(t)^2)
3. Спираль Архимеда: x(t) = 0.1 * t * cos(t), y(t) = 0.1 * t * sin(t)
"""

import numpy as np
import matplotlib.pyplot as plt


def plot_parametric(x_func, y_func, t_min, t_max, num_points=500, title="Параметрический график"):
    """
    Строит параметрический график для заданных функций x(t) и y(t).
    
    Параметры:
        x_func: Функция для вычисления координаты x от параметра t.
        y_func: Функция для вычисления координаты y от параметра t.
        t_min: Минимальное значение параметра t.
        t_max: Максимальное значение параметра t.
        num_points: Количество точек для построения графика (по умолчанию 500).
        title: Заголовок графика (по умолчанию "Параметрический график").
        
    Возвращает:
        График с заданным заголовком, сохраняет изображение в файл.
    """
    # Генерация значений параметра t в заданном диапазоне
    t = np.linspace(t_min, t_max, num_points)
    x = x_func(t)
    y = y_func(t)

    # Построение графика
    plt.plot(x, y, label=title)
    plt.axis("equal")  # Сохранение одинаковых масштабов по осям
    plt.legend()  # Легенда на графике
    plt.grid()  # Добавление сетки
    plt.savefig("/home/monkeyreel/study/2nd-year/вычмат/PARAMETRIC/plot.png")  # Сохранение изображения


# Примеры использования:

# 1. Окружность
plot_parametric(lambda t: np.cos(t), lambda t: np.sin(t), 0, 2 * np.pi, title="Окружность")

# 2. Лемниската Бернулли
plot_parametric(lambda t: np.cos(t) / (1 + np.sin(t)**2),
                lambda t: (np.cos(t) * np.sin(t)) / (1 + np.sin(t)**2),
                0, 2 * np.pi, title="Лемниската Бернулли")

# 3. Спираль Архимеда
plot_parametric(lambda t: 0.1 * t * np.cos(t),
                lambda t: 0.1 * t * np.sin(t),
                0, 10 * np.pi, title="Спираль Архимеда")
