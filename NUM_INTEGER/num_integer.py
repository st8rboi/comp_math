"""
Численное интегрирование определённого интеграла.

В модуле реализованы два метода приближённого вычисления определённого интеграла:
1. Метод прямоугольников -- суммирование значений функции в начале каждого отрезка.
2. Метод трапеций — аппроксимация площади под кривой с помощью трапеций.
"""

def f(x):
    """
    Исходная функция, подлежащая интегрированию.

    Параметры:
        x -- аргумент функции (вещественное число).

    Возвращает:
        Значение функции f(x).
    """
    return x**2


def rectangle_method(f, a, b, n):
    """
    Приближённое вычисление определённого интеграла методом прямоугольников (левых).

    Параметры:
        f -- интегрируемая функция.
        a -- нижний предел интегрирования.
        b -- верхний предел интегрирования.
        n -- количество равных разбиений отрезка [a, b].

    Возвращает:
        Приближённое значение интеграла.
    """
    h = (b - a) / n  # Шаг разбиения
    result = 0
    for i in range(n):
        result += f(a + i * h)  # Значение функции в левой точке отрезка
    return result * h


def trapezoidal_method(f, a, b, n):
    """
    Приближённое вычисление определённого интеграла методом трапеций.

    Параметры:
        f -- интегрируемая функция.
        a -- нижний предел интегрирования.
        b -- верхний предел интегрирования.
        n -- количество равных разбиений отрезка [a, b].

    Возвращает:
        Приближённое значение интеграла.
    """
    h = (b - a) / n  # Шаг разбиения
    result = 0.5 * (f(a) + f(b))  # Полусумма значений на концах отрезка
    for i in range(1, n):
        result += f(a + i * h)  # Значения функции во внутренних точках
    return result * h


# Пределы интегрирования и количество разбиений
a = 0      # Нижний предел
b = 1      # Верхний предел
n = 1000   # Количество отрезков

# Вывод результатов численного интегрирования
print("Интеграл (метод прямоугольников):", rectangle_method(f, a, b, n))
print("Интеграл (метод трапеций):", trapezoidal_method(f, a, b, n))
