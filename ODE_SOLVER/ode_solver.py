"""
Решение обыкновенного дифференциального уравнения первого порядка методом Эйлера.

Этот модуль решает задачу численного интегрирования уравнения вида:
    dy/dx = f(x, y)
"""

def f(x, y):
    """
    Правая часть уравнения dy/dx = x + y.

    Параметры:
        x -- независимая переменная.
        y -- зависимая переменная.

    Возвращает:
        Значение функции f(x, y) = x + y.
    """
    return x + y  # Правая часть уравнения


def euler_method(f, x0, y0, h, n):
    """
    Решение обыкновенного дифференциального уравнения методом Эйлера.

    Параметры:
        f -- правая часть уравнения, функция f(x, y).
        x0 -- начальное значение x.
        y0 -- начальное значение y.
        h -- шаг по x (размер шага для дискретизации).
        n -- количество шагов (итераций метода Эйлера).

    Возвращает:
        xs -- список значений x.
        ys -- список значений y, вычисленных методом Эйлера.
    """
    xs = [x0]  # Список значений x
    ys = [y0]  # Список значений y
    for i in range(n):
        y0 = y0 + h * f(x0, y0)  # Обновление значения y по формуле Эйлера
        x0 = x0 + h  # Увеличиваем x на шаг h
        xs.append(x0)  # Добавляем новое значение x
        ys.append(y0)  # Добавляем новое значение y
    return xs, ys


# Начальные условия
x0 = 0   # Начальное значение x
y0 = 1   # Начальное значение y
h = 0.1  # Шаг по x
n = 10   # Количество шагов

# Решение задачи методом Эйлера
xs, ys = euler_method(f, x0, y0, h, n)

# Вывод результатов
for i in range(len(xs)):
    print(f"x = {xs[i]:.2f}, y = {ys[i]:.4f}")
